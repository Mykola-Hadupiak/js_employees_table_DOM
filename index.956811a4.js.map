{"mappings":"ACAA,iCAAiC,E,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,G,E,I,A,W,M,A,U,wI,G,CAGjC,IAwDI,EA4RA,EApVE,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAO,SAAS,aAAa,CAAC,QAEhC,EAAa,GAYjB,SAAS,EAAgB,CAAM,EAC7B,MAAO,CAAC,EAAO,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,IAAI,CAAC,GAC1C,CAZA,EAAM,gBAAgB,CAAC,QAAS,SAAC,CAAjC,EACE,IAAM,EAAS,EAAE,MAAM,CAAC,OAAO,CAAC,MAE3B,GAAW,EAAM,QAAQ,CAAC,IAI/B,AAOF,SAAmB,CAAS,CAAE,CAAM,EAClC,IAAM,EAAU,SAAS,aAAa,CAAC,SACjC,EAAU,EAAG,EAAQ,QAAQ,EAE7B,EAAW,SAAC,CAAlB,EACE,OAAO,EAAO,KAAK,CAAC,EAAU,CAAC,SAAS,AAC1C,EAEA,OAAQ,GACN,IAAK,OACL,IAAK,WACL,IAAK,SACH,EAAO,IAAI,CAAC,SAAC,CAAA,CAAG,CAAhB,EAAsB,OAAA,EAAS,GAAG,aAAa,CAAC,EAAS,G,GACzD,KAEF,KAAK,MACH,EAAO,IAAI,CAAC,SAAC,CAAA,CAAG,CAAhB,EAAsB,MAAA,CAAC,EAAS,GAAK,CAAC,EAAS,E,GAC/C,KAEF,KAAK,SACH,EAAO,IAAI,CAAC,SAAC,CAAA,CAAG,CAAhB,EAAsB,MAAC,CAAC,EAAgB,EAAS,IAC5C,CAAC,EAAgB,EAAS,G,EAEnC,CAEA,GAAI,IAAe,EAAQ,CACzB,AAAA,EAAQ,MAAM,CAAd,KAAA,CAAA,EAAe,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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["/* eslint-disable no-unused-vars */ \"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar thead = document.querySelector(\"thead\");\nvar tbody = document.querySelector(\"tbody\");\nvar body = document.querySelector(\"body\");\nvar isReversed = \"\";\nthead.addEventListener(\"click\", function(e) {\n    var sortBy = e.target.closest(\"th\");\n    if (!sortBy || !thead.contains(sortBy)) return;\n    sortTable(sortBy.cellIndex, sortBy.innerHTML);\n});\nfunction normalizeSalary(salary) {\n    return +salary.slice(1).split(\",\").join(\"\");\n}\nfunction sortTable(cellIndex, sortBy) {\n    var _tabBody;\n    var tabBody = document.querySelector(\"tbody\");\n    var people = _to_consumable_array(tabBody.children);\n    var whichRow = function(person) {\n        return person.cells[cellIndex].innerHTML;\n    };\n    switch(sortBy){\n        case \"Name\":\n        case \"Position\":\n        case \"Office\":\n            people.sort(function(a, b) {\n                return whichRow(a).localeCompare(whichRow(b));\n            });\n            break;\n        case \"Age\":\n            people.sort(function(a, b) {\n                return +whichRow(a) - +whichRow(b);\n            });\n            break;\n        case \"Salary\":\n            people.sort(function(a, b) {\n                return +normalizeSalary(whichRow(a)) - +normalizeSalary(whichRow(b));\n            });\n            break;\n    }\n    if (isReversed === sortBy) {\n        var _tabBody1;\n        (_tabBody1 = tabBody).append.apply(_tabBody1, _to_consumable_array(people.reverse()));\n        isReversed = \"\";\n        return;\n    }\n    (_tabBody = tabBody).append.apply(_tabBody, _to_consumable_array(people));\n    isReversed = sortBy;\n}\nvar lastRow;\ntbody.addEventListener(\"click\", function(e) {\n    if (lastRow) lastRow.classList.remove(\"active\");\n    var row = e.target.closest(\"tr\");\n    if (!row || !tbody.contains(row)) return;\n    row.className = \"active\";\n    lastRow = row;\n});\nbody.insertAdjacentHTML(\"beforeend\", '\\n  <form class=\"new-employee-form\" onsubmit=\"handleSubmit(event)\">\\n    <label>\\n      Name:\\n\\n      <input name=\"name\" type=\"text\" data-qa=\"name\" required>\\n    </label>\\n\\n    <label>\\n      Position:\\n\\n      <input name=\"position\" type=\"text\" data-qa=\"position\" required>\\n    </label>\\n\\n    <label>\\n      Office:\\n\\n      <select name=\"office\" data-qa=\"office\" required>\\n        <option value=\"\" disabled selected>Select office</option>\\n        <option value=\"Tokyo\">Tokyo</option>\\n        <option value=\"Singapore\">Singapore</option>\\n        <option value=\"London\">London</option>\\n        <option value=\"New-York\">New York</option>\\n        <option value=\"Edinburgh\">Edinburgh</option>\\n        <option value=\"San-Francisco\">San Francisco</option>\\n      </select>\\n    </label>\\n\\n    <label>\\n      Age:\\n\\n      <input\\n        name=\"age\"\\n        type=\"number\"\\n        data-qa=\"age\"\\n        required\\n      >\\n    </label>\\n\\n    <label>\\n      Salary:\\n\\n      <input\\n        name=\"salary\"\\n        type=\"number\"\\n        data-qa=\"salary\"\\n        required\\n      >\\n    </label>\\n\\n    <button type=\"submit\">\\n      Save to table\\n    </button>\\n  </form>\\n');\nvar pushNotification = function(posTop, posRight, title, description, type) {\n    document.querySelector(\"body\").insertAdjacentHTML(\"beforeend\", '\\n      <div\\n        class=\"notification '.concat(type, '\"\\n        style=\"\\n          top: ').concat(posTop, \"px;\\n          right: \").concat(posRight, 'px;\\n        \"\\n        data-qa=\"notification\"\\n      >\\n        <h2 class=\"title\">').concat(title, \"</h2>\\n\\n        <p>\").concat(description, \"</p>\\n      </div>\\n    \"));\n    setTimeout(function() {\n        var notifications = document.querySelectorAll(\".notification\");\n        notifications.forEach(function(notification) {\n            return notification.remove();\n        });\n    }, 2000);\n};\nvar form = document.querySelector(\".new-employee-form\");\nvar convertToDollars = function(num) {\n    return \"$\".concat((+num).toLocaleString(\"en-US\"));\n};\nvar nameChecker = function(nameOfUser) {\n    if (nameOfUser.trim().length < 4 || !isNaN(+nameOfUser)) {\n        pushNotification(10, 10, \"Error\", \"Name should have at least 4 symbols and cannot be a number or empty\", \"error\");\n        return true;\n    }\n};\nvar positionChecker = function(positionOfUser) {\n    if (positionOfUser.trim().length < 4 || !isNaN(+positionOfUser)) {\n        pushNotification(10, 10, \"Error\", \"Position should have at least 4 symbols and cannot be a number or empty\", \"error\");\n        return true;\n    }\n};\nvar ageChecker = function(age) {\n    if (+age < 18 || +age > 90) {\n        pushNotification(10, 10, \"Error\", \"Age must be over 18 and under 90\", \"error\");\n        return true;\n    }\n};\nvar salaryChecker = function(salary) {\n    if (+salary <= 0 || +salary > 999999) {\n        pushNotification(10, 10, \"Error\", \"Salary must be over $0 and under $999,999\", \"error\");\n        return true;\n    }\n};\nvar successNotification = function() {\n    pushNotification(10, 10, \"Success\", \"User was added successfully\", \"success\");\n};\nvar successNotificationUpdate = function() {\n    pushNotification(10, 10, \"Success\", \"User was successfully updated\", \"success\");\n};\nform.addEventListener(\"submit\", function(e) {\n    var tableBody = document.querySelector(\"tbody\");\n    e.preventDefault();\n    var dataFromServer = new FormData(form);\n    var data = Object.fromEntries(dataFromServer.entries());\n    if (nameChecker(data.name)) return;\n    if (positionChecker(data.position)) return;\n    if (ageChecker(data.age)) return;\n    if (salaryChecker(data.salary)) return;\n    var userName = data.name, position = data.position, office = data.office, age = data.age, salary = data.salary;\n    var normSalary = convertToDollars(salary);\n    tableBody.insertAdjacentHTML(\"beforeend\", \"\\n    <tr>\\n      <td>\".concat(userName, \"</td>\\n      <td>\").concat(position, \"</td>\\n      <td>\").concat(office, \"</td>\\n      <td>\").concat(+age, \"</td>\\n      <td>\").concat(normSalary, \"</td>\\n    </tr>\\n  \"));\n    successNotification();\n    form.reset();\n});\nvar input = \"\";\nvar handleChange = function(e) {\n    if (e.target.type === \"text\" || e.target.name === \"age\" || e.target.name === \"office\") input = e.target.value;\n    else if (e.target.name === \"salary\") input = convertToDollars(e.target.value);\n};\nvar changesCheckers = function(e) {\n    if (e.target.name === \"name\" && nameChecker(input)) {\n        e.target.parentElement.innerHTML = _to_consumable_array(target.children)[0].defaultValue;\n        input = target.innerHTML;\n        return true;\n    }\n    if (e.target.name === \"position\" && positionChecker(input)) {\n        e.target.parentElement.innerHTML = _to_consumable_array(target.children)[0].defaultValue;\n        input = target.innerHTML;\n        return true;\n    }\n    if (e.target.name === \"age\" && ageChecker(+input)) {\n        e.target.parentElement.innerHTML = _to_consumable_array(target.children)[0].defaultValue;\n        input = target.innerHTML;\n        return true;\n    }\n    if (e.target.name === \"salary\" && salaryChecker(normalizeSalary(input))) {\n        e.target.parentElement.innerHTML = convertToDollars(_to_consumable_array(target.children)[0].defaultValue);\n        input = target.innerHTML;\n        return true;\n    }\n};\nvar handleOnBlur = function(e) {\n    if (changesCheckers(e)) return;\n    e.target.parentElement.innerHTML = input;\n    successNotificationUpdate();\n};\nvar handleKeyUp = function(e) {\n    if (e.key === \"Enter\") {\n        if (changesCheckers(e)) return;\n        e.target.parentElement.innerHTML = input;\n        successNotificationUpdate();\n    } else if (e.key === \"Escape\") e.target.parentElement.innerHTML = e.target.value;\n};\nvar target;\ntbody.addEventListener(\"dblclick\", function(e) {\n    e.preventDefault();\n    if (target) target.innerHTML = input;\n    var cell = e.target.closest(\"td\");\n    if (!cell || !tbody.contains(cell)) return;\n    target = cell;\n    if (cell.cellIndex === 0) {\n        var cellText = cell.innerHTML;\n        input = cellText;\n        cell.removeChild(cell.firstChild);\n        cell.insertAdjacentHTML(\"beforeend\", '\\n      <input\\n        type=\"text\"\\n        name=\"name\"\\n        class=\"cell-input\"\\n        value=\"'.concat(cellText, '\"\\n      >\\n    '));\n        var inputElement = cell.firstElementChild;\n        inputElement.addEventListener(\"blur\", handleOnBlur);\n        inputElement.addEventListener(\"input\", handleChange);\n        inputElement.addEventListener(\"keyup\", handleKeyUp);\n    }\n    if (cell.cellIndex === 1) {\n        var cellText1 = cell.innerHTML;\n        input = cellText1;\n        cell.removeChild(cell.firstChild);\n        cell.insertAdjacentHTML(\"beforeend\", '\\n      <input\\n        type=\"text\"\\n        name=\"position\"\\n        class=\"cell-input\"\\n        value=\"'.concat(cellText1, '\"\\n      >\\n    '));\n        var inputElement1 = cell.firstElementChild;\n        inputElement1.addEventListener(\"blur\", handleOnBlur);\n        inputElement1.addEventListener(\"input\", handleChange);\n        inputElement1.addEventListener(\"keyup\", handleKeyUp);\n    }\n    if (cell.cellIndex === 2) {\n        var cellText2 = cell.innerHTML;\n        input = cellText2;\n        cell.removeChild(cell.firstChild);\n        cell.insertAdjacentHTML(\"beforeend\", '\\n      <select\\n        name=\"office\"\\n        class=\"cell-input\"\\n      >\\n        <option value=\"Tokyo\" '.concat(cellText2 === \"Tokyo\" ? \"selected\" : \"\", '>\\n          Tokyo\\n        </option>\\n\\n        <option value=\"Singapore\" ').concat(cellText2 === \"Singapore\" ? \"selected\" : \"\", '>\\n          Singapore\\n        </option>\\n\\n        <option value=\"London\" ').concat(cellText2 === \"London\" ? \"selected\" : \"\", '>\\n          London\\n        </option>\\n\\n        <option value=\"New-York\" ').concat(cellText2 === \"New York\" ? \"selected\" : \"\", '>\\n        New York\\n        </option>\\n\\n        <option value=\"Edinburgh\" ').concat(cellText2 === \"Edinburgh\" ? \"selected\" : \"\", '>\\n          Edinburgh\\n        </option>\\n\\n        <option\\n          value=\"San-Francisco\"\\n          ').concat(cellText2 === \"San Francisco\" ? \"selected\" : \"\", \"\\n        >\\n          San Francisco\\n        </option>\\n      </select>\\n    \"));\n        var inputElement2 = cell.firstElementChild;\n        inputElement2.addEventListener(\"blur\", handleOnBlur);\n        inputElement2.addEventListener(\"input\", handleChange);\n        inputElement2.addEventListener(\"keyup\", handleKeyUp);\n    }\n    if (cell.cellIndex === 3) {\n        var cellText3 = cell.innerHTML;\n        input = cellText3;\n        cell.removeChild(cell.firstChild);\n        cell.insertAdjacentHTML(\"beforeend\", '\\n      <input\\n        type=\"number\"\\n        name=\"age\"\\n        class=\"cell-input\"\\n        value=\"'.concat(cellText3, '\"\\n      >\\n    '));\n        var inputElement3 = cell.firstElementChild;\n        inputElement3.addEventListener(\"blur\", handleOnBlur);\n        inputElement3.addEventListener(\"input\", handleChange);\n        inputElement3.addEventListener(\"keyup\", handleKeyUp);\n    }\n    if (cell.cellIndex === 4) {\n        var cellText4 = normalizeSalary(cell.innerHTML);\n        input = cellText4;\n        cell.removeChild(cell.firstChild);\n        cell.insertAdjacentHTML(\"beforeend\", '\\n      <input\\n        type=\"number\"\\n        name=\"salary\"\\n        class=\"cell-input\"\\n        value=\"'.concat(cellText4, '\"\\n      >\\n    '));\n        var inputElement4 = cell.firstElementChild;\n        inputElement4.addEventListener(\"blur\", handleOnBlur);\n        inputElement4.addEventListener(\"input\", handleChange);\n        inputElement4.addEventListener(\"keyup\", handleKeyUp);\n    }\n});\n\n//# sourceMappingURL=index.956811a4.js.map\n","/* eslint-disable no-unused-vars */\n'use strict';\n\nconst thead = document.querySelector('thead');\nconst tbody = document.querySelector('tbody');\nconst body = document.querySelector('body');\n\nlet isReversed = '';\n\nthead.addEventListener('click', (e) => {\n  const sortBy = e.target.closest('th');\n\n  if (!sortBy || !thead.contains(sortBy)) {\n    return;\n  }\n\n  sortTable(sortBy.cellIndex, sortBy.innerHTML);\n});\n\nfunction normalizeSalary(salary) {\n  return +salary.slice(1).split(',').join('');\n}\n\nfunction sortTable(cellIndex, sortBy) {\n  const tabBody = document.querySelector('tbody');\n  const people = [...tabBody.children];\n\n  const whichRow = (person) => {\n    return person.cells[cellIndex].innerHTML;\n  };\n\n  switch (sortBy) {\n    case 'Name':\n    case 'Position':\n    case 'Office':\n      people.sort((a, b) => whichRow(a).localeCompare(whichRow(b)));\n      break;\n\n    case 'Age':\n      people.sort((a, b) => +whichRow(a) - +whichRow(b));\n      break;\n\n    case 'Salary':\n      people.sort((a, b) => (+normalizeSalary(whichRow(a)))\n        - (+normalizeSalary(whichRow(b))));\n      break;\n  }\n\n  if (isReversed === sortBy) {\n    tabBody.append(...people.reverse());\n    isReversed = '';\n\n    return;\n  }\n\n  tabBody.append(...people);\n  isReversed = sortBy;\n}\n\nlet lastRow;\n\ntbody.addEventListener('click', (e) => {\n  if (lastRow) {\n    lastRow.classList.remove('active');\n  }\n\n  const row = e.target.closest('tr');\n\n  if (!row || !tbody.contains(row)) {\n    return;\n  }\n\n  row.className = 'active';\n  lastRow = row;\n});\n\nbody.insertAdjacentHTML('beforeend', `\n  <form class=\"new-employee-form\" onsubmit=\"handleSubmit(event)\">\n    <label>\n      Name:\n\n      <input name=\"name\" type=\"text\" data-qa=\"name\" required>\n    </label>\n\n    <label>\n      Position:\n\n      <input name=\"position\" type=\"text\" data-qa=\"position\" required>\n    </label>\n\n    <label>\n      Office:\n\n      <select name=\"office\" data-qa=\"office\" required>\n        <option value=\"\" disabled selected>Select office</option>\n        <option value=\"Tokyo\">Tokyo</option>\n        <option value=\"Singapore\">Singapore</option>\n        <option value=\"London\">London</option>\n        <option value=\"New-York\">New York</option>\n        <option value=\"Edinburgh\">Edinburgh</option>\n        <option value=\"San-Francisco\">San Francisco</option>\n      </select>\n    </label>\n\n    <label>\n      Age:\n\n      <input\n        name=\"age\"\n        type=\"number\"\n        data-qa=\"age\"\n        required\n      >\n    </label>\n\n    <label>\n      Salary:\n\n      <input\n        name=\"salary\"\n        type=\"number\"\n        data-qa=\"salary\"\n        required\n      >\n    </label>\n\n    <button type=\"submit\">\n      Save to table\n    </button>\n  </form>\n`);\n\nconst pushNotification = (posTop, posRight, title, description, type) => {\n  document.querySelector('body')\n    .insertAdjacentHTML('beforeend', `\n      <div\n        class=\"notification ${type}\"\n        style=\"\n          top: ${posTop}px;\n          right: ${posRight}px;\n        \"\n        data-qa=\"notification\"\n      >\n        <h2 class=\"title\">${title}</h2>\n\n        <p>${description}</p>\n      </div>\n    `);\n\n  setTimeout(() => {\n    const notifications = document.querySelectorAll('.notification');\n\n    notifications.forEach(notification => notification.remove());\n  }, 2000);\n};\n\nconst form = document.querySelector('.new-employee-form');\n\nconst convertToDollars = (num) => {\n  return `$${(+num).toLocaleString('en-US')}`;\n};\n\nconst nameChecker = (nameOfUser) => {\n  if (nameOfUser.trim().length < 4 || !isNaN(+nameOfUser)) {\n    pushNotification(10, 10,\n      'Error',\n      'Name should have at least 4 symbols and cannot be a number or empty',\n      'error',\n    );\n\n    return true;\n  }\n};\n\nconst positionChecker = (positionOfUser) => {\n  if (positionOfUser.trim().length < 4 || !isNaN(+positionOfUser)) {\n    pushNotification(10, 10,\n      'Error',\n      'Position should have at least 4 symbols and cannot be a number or empty',\n      'error',\n    );\n\n    return true;\n  }\n};\n\nconst ageChecker = (age) => {\n  if (+age < 18 || +age > 90) {\n    pushNotification(10, 10,\n      'Error',\n      'Age must be over 18 and under 90',\n      'error',\n    );\n\n    return true;\n  }\n};\n\nconst salaryChecker = (salary) => {\n  if (+salary <= 0 || +salary > 999999) {\n    pushNotification(10, 10,\n      'Error',\n      'Salary must be over $0 and under $999,999',\n      'error',\n    );\n\n    return true;\n  }\n};\n\nconst successNotification = () => {\n  pushNotification(10, 10,\n    'Success',\n    'User was added successfully',\n    'success',\n  );\n};\n\nconst successNotificationUpdate = () => {\n  pushNotification(10, 10,\n    'Success',\n    'User was successfully updated',\n    'success',\n  );\n};\n\nform.addEventListener('submit', (e) => {\n  const tableBody = document.querySelector('tbody');\n\n  e.preventDefault();\n\n  const dataFromServer = new FormData(form);\n\n  const data = Object.fromEntries(dataFromServer.entries());\n\n  if (nameChecker(data.name)) {\n    return;\n  }\n\n  if (positionChecker(data.position)) {\n    return;\n  }\n\n  if (ageChecker(data.age)) {\n    return;\n  }\n\n  if (salaryChecker(data.salary)) {\n    return;\n  }\n\n  const {\n    name: userName,\n    position,\n    office,\n    age,\n    salary,\n  } = data;\n\n  const normSalary = convertToDollars(salary);\n\n  tableBody.insertAdjacentHTML('beforeend', `\n    <tr>\n      <td>${userName}</td>\n      <td>${position}</td>\n      <td>${office}</td>\n      <td>${+age}</td>\n      <td>${normSalary}</td>\n    </tr>\n  `);\n\n  successNotification();\n\n  form.reset();\n});\n\nlet input = '';\n\nconst handleChange = (e) => {\n  if (e.target.type === 'text'\n    || e.target.name === 'age'\n    || e.target.name === 'office'\n  ) {\n    input = e.target.value;\n  } else if (e.target.name === 'salary') {\n    input = convertToDollars(e.target.value);\n  }\n};\n\nconst changesCheckers = (e) => {\n  if ((e.target.name === 'name') && (nameChecker(input))) {\n    e.target.parentElement.innerHTML = [...target.children][0].defaultValue;\n    input = target.innerHTML;\n\n    return true;\n  }\n\n  if ((e.target.name === 'position') && (positionChecker(input))) {\n    e.target.parentElement.innerHTML = [...target.children][0].defaultValue;\n    input = target.innerHTML;\n\n    return true;\n  }\n\n  if ((e.target.name === 'age') && (ageChecker(+input))) {\n    e.target.parentElement.innerHTML = [...target.children][0].defaultValue;\n    input = target.innerHTML;\n\n    return true;\n  }\n\n  if ((e.target.name === 'salary') && (salaryChecker(normalizeSalary(input)))\n  ) {\n    e.target.parentElement.innerHTML = convertToDollars(\n      [...target.children][0].defaultValue);\n    input = target.innerHTML;\n\n    return true;\n  }\n};\n\nconst handleOnBlur = (e) => {\n  if (changesCheckers(e)) {\n    return;\n  }\n\n  e.target.parentElement.innerHTML = input;\n  successNotificationUpdate();\n};\n\nconst handleKeyUp = (e) => {\n  if (e.key === 'Enter') {\n    if (changesCheckers(e)) {\n      return;\n    }\n\n    e.target.parentElement.innerHTML = input;\n    successNotificationUpdate();\n  } else if (e.key === 'Escape') {\n    e.target.parentElement.innerHTML = e.target.value;\n  }\n};\n\nlet target;\n\ntbody.addEventListener('dblclick', (e) => {\n  e.preventDefault();\n\n  if (target) {\n    target.innerHTML = input;\n  }\n\n  const cell = e.target.closest('td');\n\n  if (!cell || !tbody.contains(cell)) {\n    return;\n  }\n\n  target = cell;\n\n  if (cell.cellIndex === 0) {\n    const cellText = cell.innerHTML;\n\n    input = cellText;\n\n    cell.removeChild(cell.firstChild);\n\n    cell.insertAdjacentHTML('beforeend', `\n      <input\n        type=\"text\"\n        name=\"name\"\n        class=\"cell-input\"\n        value=\"${cellText}\"\n      >\n    `);\n\n    const inputElement = cell.firstElementChild;\n\n    inputElement.addEventListener('blur', handleOnBlur);\n    inputElement.addEventListener('input', handleChange);\n    inputElement.addEventListener('keyup', handleKeyUp);\n  }\n\n  if (cell.cellIndex === 1) {\n    const cellText = cell.innerHTML;\n\n    input = cellText;\n\n    cell.removeChild(cell.firstChild);\n\n    cell.insertAdjacentHTML('beforeend', `\n      <input\n        type=\"text\"\n        name=\"position\"\n        class=\"cell-input\"\n        value=\"${cellText}\"\n      >\n    `);\n\n    const inputElement = cell.firstElementChild;\n\n    inputElement.addEventListener('blur', handleOnBlur);\n    inputElement.addEventListener('input', handleChange);\n    inputElement.addEventListener('keyup', handleKeyUp);\n  }\n\n  if (cell.cellIndex === 2) {\n    const cellText = cell.innerHTML;\n\n    input = cellText;\n\n    cell.removeChild(cell.firstChild);\n\n    cell.insertAdjacentHTML('beforeend', `\n      <select\n        name=\"office\"\n        class=\"cell-input\"\n      >\n        <option value=\"Tokyo\" ${cellText === 'Tokyo' ? 'selected' : ''}>\n          Tokyo\n        </option>\n\n        <option value=\"Singapore\" ${cellText === 'Singapore' ? 'selected' : ''}>\n          Singapore\n        </option>\n\n        <option value=\"London\" ${cellText === 'London' ? 'selected' : ''}>\n          London\n        </option>\n\n        <option value=\"New-York\" ${cellText === 'New York' ? 'selected' : ''}>\n        New York\n        </option>\n\n        <option value=\"Edinburgh\" ${cellText === 'Edinburgh' ? 'selected' : ''}>\n          Edinburgh\n        </option>\n\n        <option\n          value=\"San-Francisco\"\n          ${cellText === 'San Francisco' ? 'selected' : ''}\n        >\n          San Francisco\n        </option>\n      </select>\n    `);\n\n    const inputElement = cell.firstElementChild;\n\n    inputElement.addEventListener('blur', handleOnBlur);\n    inputElement.addEventListener('input', handleChange);\n    inputElement.addEventListener('keyup', handleKeyUp);\n  }\n\n  if (cell.cellIndex === 3) {\n    const cellText = cell.innerHTML;\n\n    input = cellText;\n\n    cell.removeChild(cell.firstChild);\n\n    cell.insertAdjacentHTML('beforeend', `\n      <input\n        type=\"number\"\n        name=\"age\"\n        class=\"cell-input\"\n        value=\"${cellText}\"\n      >\n    `);\n\n    const inputElement = cell.firstElementChild;\n\n    inputElement.addEventListener('blur', handleOnBlur);\n    inputElement.addEventListener('input', handleChange);\n    inputElement.addEventListener('keyup', handleKeyUp);\n  }\n\n  if (cell.cellIndex === 4) {\n    const cellText = normalizeSalary(cell.innerHTML);\n\n    input = cellText;\n\n    cell.removeChild(cell.firstChild);\n\n    cell.insertAdjacentHTML('beforeend', `\n      <input\n        type=\"number\"\n        name=\"salary\"\n        class=\"cell-input\"\n        value=\"${cellText}\"\n      >\n    `);\n\n    const inputElement = cell.firstElementChild;\n\n    inputElement.addEventListener('blur', handleOnBlur);\n    inputElement.addEventListener('input', handleChange);\n    inputElement.addEventListener('keyup', handleKeyUp);\n  }\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","lastRow","target","thead","document","querySelector","tbody","body","isReversed","normalizeSalary","salary","split","join","addEventListener","e","sortBy","closest","contains","sortTable","cellIndex","tabBody","people","children","whichRow","person","cells","innerHTML","sort","a","b","localeCompare","append","apply","reverse","classList","remove","row","className","insertAdjacentHTML","pushNotification","posTop","posRight","title","description","type","concat","setTimeout","notifications","querySelectorAll","forEach","notification","form","convertToDollars","num","toLocaleString","nameChecker","nameOfUser","trim","isNaN","positionChecker","positionOfUser","ageChecker","age","salaryChecker","successNotification","successNotificationUpdate","tableBody","preventDefault","data","fromEntries","dataFromServer","FormData","entries","position","userName","office","normSalary","reset","input","handleChange","value","changesCheckers","parentElement","defaultValue","handleOnBlur","handleKeyUp","key","cell","cellText","removeChild","firstChild","inputElement","firstElementChild","cellText1","inputElement1","cellText2","inputElement2","cellText3","inputElement3","cellText4","inputElement4"],"version":3,"file":"index.956811a4.js.map"}